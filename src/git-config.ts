import { GitConfig } from './git-handler';
import 'dotenv/config'; // Automatically load environment variables from .env file

/**
 * Configuration for Git operations
 * Environment variables can be used to override these values
 */
export const DEFAULT_GIT_CONFIG: Partial<GitConfig> = {
  targetBranch: 'main',
  prTitle: 'Update Space Coast Tech Events',
  prBody: `
## ðŸ¤– Automated Event Update

This PR contains an automated update of the Space Coast tech events markdown file.

### Changes
- Updated event listings from Meetup groups
- Events filtered for the current/specified month
- Markdown formatted for Astro site

### Source
Generated by the evnt-hndlr tool from the following Meetup groups:
- Space Coast Devs
- Space Coast Security
- Melbourne Makerspace
- Melbourne R/H User Group
- Startup Space Coast

*This PR was created automatically. Please review the content before merging.*
  `.trim()
};

/**
 * Creates a GitConfig from environment variables and defaults
 */
export function createGitConfigFromEnv(): GitConfig {
  const requiredEnvVars = {
    repoUrl: process.env.ASTRO_REPO_URL,
    repoPath: process.env.LOCAL_REPO_PATH,
    githubToken: process.env.GITHUB_TOKEN
  };

  // Check for required environment variables
  const missing = Object.entries(requiredEnvVars)
    .filter(([key, value]) => !value)
    .map(([key]) => key);

  if (missing.length > 0) {
    throw new Error(`Missing required environment variables: ${missing.join(', ')}`);
  }

  return {
    repoUrl: requiredEnvVars.repoUrl!,
    repoPath: requiredEnvVars.repoPath!,
    githubToken: requiredEnvVars.githubToken!,
    ...DEFAULT_GIT_CONFIG
  };
}

/**
 * Example usage configuration
 */
export const EXAMPLE_CONFIG: GitConfig = {
  repoUrl: 'https://github.com/yourusername/your-astro-site.git',
  repoPath: '/tmp/astro-site',
  githubToken: 'your-github-token',
  targetBranch: 'main',
  prTitle: 'Update Space Coast Tech Events',
  prBody: DEFAULT_GIT_CONFIG.prBody!
};
